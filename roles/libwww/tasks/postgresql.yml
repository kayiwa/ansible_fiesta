---
- name: MySQL | Install MySQL
  apt: pkg={{ item }} state=installed
  with_items:
    - mysql-common
    - mysql-server
    - python3-mysqldb

- name: Disallow root login remotely
  command: 'mysql -NBe "{{ item }}"'
  with_items:
    - DELETE FROM mysql.user WHERE User='{{ mysql_root_username }}' AND Host NOT IN ('localhost', '127.0.0.1', '::1')

- name: Get list of hosts for the root user.
  command: mysql -NBe "SELECT Host FROM mysql.user WHERE User = '{{ mysql_root_username }}' ORDER BY (Host='localhost') ASC"
  register: mysql_root_hosts

  # MySQL gets installed with a default login of 'root' and no password.
  # For a properly secured automated MySQL install, the below 2 tasks must be run in the respective order so that
  # subsequent commands use the my.cnf file to read credentials.
  # Source: http://docs.ansible.com/ansible/mysql_user_module.html
- name: Update MySQL root password for localhost root account (5.7.x).
  shell: >
    mysql -u root -NBe
    'ALTER USER "{{ mysql_root_username }}"@"{{ item }}" IDENTIFIED WITH mysql_native_password BY "{{ mysql_root_password }}";'
  with_items: "{{ mysql_root_hosts.stdout_lines|default([]) }}"

- name: Copy .my.cnf file with root password credentials.
  template:
    src: templates/mysql/root-my.cnf.j2
    dest: "{{ mysql_root_home }}/.my.cnf"
    owner: root
    group: root
    mode: 0600

- name: MySQL | Ensure MySQL users are present.
  mysql_user:
    name: "{{ item.name }}"
    host: "{{ item.host | default('localhost') }}"
    password: "{{ item.password }}"
    priv: "{{ item.priv | default('*.*:USAGE') }}"
    state: "{{ item.state | default('present') }}"
    append_privs: "{{ item.append_privs | default('no') }}"
  with_items: "{{ mysql_users }}"


- name: MySQL | Ensure MySQL databases are present.
  mysql_db:
    name: "{{ item.name }}"
    collation: "{{ item.collation | default('utf8_general_ci') }}"
    encoding: "{{ item.encoding | default('utf8') }}"
    state: present
  with_items: "{{ mysql_databases }}"
